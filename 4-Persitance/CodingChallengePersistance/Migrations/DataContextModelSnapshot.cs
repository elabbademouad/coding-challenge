// <auto-generated />
using System;
using CodingChallengePersistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodingChallengePersistance.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("CodingChallengeBusiness.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.Property<string>("Picture");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("CodingChallengeBusiness.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CodingChallengeBusiness.Entities.UserShopPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("ShopId");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.HasIndex("UserId");

                    b.ToTable("UserShopPreferences");
                });

            modelBuilder.Entity("CodingChallengeBusiness.Entities.Shop", b =>
                {
                    b.OwnsOne("CodingChallengeBusiness.Entities.Position", "Position", b1 =>
                        {
                            b1.Property<int>("ShopId");

                            b1.Property<double>("Latitude");

                            b1.Property<double>("Longitude");

                            b1.HasKey("ShopId");

                            b1.ToTable("Shops");

                            b1.HasOne("CodingChallengeBusiness.Entities.Shop")
                                .WithOne("Position")
                                .HasForeignKey("CodingChallengeBusiness.Entities.Position", "ShopId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("CodingChallengeBusiness.Entities.User", b =>
                {
                    b.OwnsOne("CodingChallengeBusiness.Entities.Position", "Position", b1 =>
                        {
                            b1.Property<int>("UserId");

                            b1.Property<double>("Latitude");

                            b1.Property<double>("Longitude");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.HasOne("CodingChallengeBusiness.Entities.User")
                                .WithOne("Position")
                                .HasForeignKey("CodingChallengeBusiness.Entities.Position", "UserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("CodingChallengeBusiness.Entities.UserShopPreference", b =>
                {
                    b.HasOne("CodingChallengeBusiness.Entities.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId");

                    b.HasOne("CodingChallengeBusiness.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
